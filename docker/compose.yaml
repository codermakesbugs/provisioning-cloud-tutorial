version: '3.9'

services:
  jenkins:
    image: jenkins/jenkins:latest-jdk17
    privileged: true
    user: jenkins
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1g
    networks:
      infrastructure:
    container_name: jenkins
    volumes:
      - ./jenkins/jenkins_home:/var/jenkins_home:rw,z
      - ./jenkins/ssh/id_rsa:/var/jenkins_home/.ssh/id_ed25519

  agent:
    image: lupinkis/agent-node
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 2g
    privileged: true
    tty: true
    cap_add:
      - NET_ADMIN
    networks:
      infrastructure:
        aliases:
          - agent-docker
    container_name: agent
    volumes:
      - ./jenkins/jenkins_agent:/home/jenkins:rw,z
      - /var/run/docker.sock:/var/run/docker.sock:z
      - ./jenkins/ssh/id_rsa.pub:/home/jenkins/.ssh/authorized_keys

  # artifactory:
  #   image: releases-docker.jfrog.io/jfrog/artifactory-oss:latest
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.5"
  #         memory: 0.5g
  #   networks:
  #     infrastructure:
  #   container_name: artifactory
  #   volumes:
  #     - artifactory-data:/var/opt/jfrog/artifactory/:rw,z

  sonarqube:
    image: sonarqube:community
    depends_on:
      - database
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1g
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://database-docker:5432/postgres
      SONAR_JDBC_USERNAME: postgres
      SONAR_JDBC_PASSWORD: postgres
    volumes:
      - ./sonarqube/sonarqube_data:/opt/sonarqube/data
      - ./sonarqube/sonarqube_extensions:/opt/sonarqube/extensions
      - ./sonarqube/sonarqube_logs:/opt/sonarqube/logs
    container_name: sonarqube
    networks:
      infrastructure:
        aliases:
          - sonarqube-docker

  database:
    image: postgres
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1g
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    container_name: database
    volumes:
      - ./database/postgresql:/var/lib/postgresql
      - ./database/postgresql_data:/var/lib/postgresql/data
    networks:
      infrastructure:
        aliases:
          - database-docker

  gateway:
    image: nginx
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 0.5g
    depends_on:
      - database
      - jenkins
      - sonarqube
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:rw,z
    ports:
      - "80:80"
    container_name: gateway
    networks:
      infrastructure:

volumes:
  artifactory-data:

networks:
  infrastructure:
    name: infrastructure
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/16
